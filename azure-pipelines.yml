# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

name: $(Year:yy)$(DayOfYear)$(Rev:r)

variables:
  majorVer: '1.0.0'

stages:
  - stage: Testing
    jobs:
    - job: 'Test_Matrix'
      strategy:
        matrix:
          Linux_Python37:
            vmImage: 'ubuntu-latest'
            python.version: '3.7'
          Mac_Python37:
            vmImage: 'macos-latest'
            python.version: '3.7'
          Windows_Python37:
            vmImage: 'windows-latest'
            python.version: '3.7'
        maxParallel: 2
      steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
          architecture: 'x64'
      - script: |
          python -m pip install --upgrade pip
          pip install pytest flit pytest-azurepipelines pytest-asyncio Flask-Caching
          flit install
        displayName: 'Install dependencies'
      - script: |
          pip install pytest Flask-Caching
          python -m pytest tests/ --junitxml=junit/test-results.xml
        displayName: 'pytest'
      - task: PublishTestResults@2
        inputs:
          testResultsFiles: '**/test-results.xml'
          testRunTitle: 'Python $(python.version)'
        condition: succeededOrFailed()
  - stage: Coverage
    jobs:
    - job: 'Coverage'
      pool:
        vmImage: 'ubuntu-latest'
      strategy:
        matrix:
          Python37:
            python.version: '3.7'
        maxParallel: 2
      steps:
      - task: UsePythonVersion@0
        inputs:
            versionSpec: '$(python.version)'
            architecture: 'x64'
      - script: |
          python -m pip install --upgrade pip
          pip install flit pytest pytest-azurepipelines codecov pytest-cov pytest-asyncio Flask-Caching
          flit install
        displayName: 'Install dependencies'
      - script: |
          python -m pytest tests/ --cov=quart_compress/
          codecov
        displayName: 'coverage'
        env:
          CODECOV_TOKEN: 'fcbbb820-7cd1-45b8-a136-91ac613e3718'
